name: build-publish
on:
  push:
    branches:
      - main
permissions: 
  contents: write
  packages: write 
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
        version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install-deps
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfuse3-dev

      - name: install-rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
        
      - name: extract-version
        id: extract_version
        run: |
          version=$(grep '^version = ' Cargo.toml | head -1 | sed -E 's/version = "(.*)"/\1/')
          echo "::set-output name=version::$version"

      - name: build
        run: cargo build --release
    
      - name: package
        run: |
          mkdir -p dist
          tar -czvf dist/objectfs-v${{ steps.extract_version.outputs.version }}.tar.gz -C target/release objectfs
    
      - name: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: objectfs-tarball
          path: dist/objectfs-v${{ steps.extract_version.outputs.version }}.tar.gz

  publish-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download-artifact
        uses: actions/download-artifact@v3
        with:
          name: objectfs-tarball

      - name: create-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.build.outputs.version }}"
          release_name: "objectfs v${{ needs.build.outputs.version }}"
          body: "Release for objectfs v${{ needs.build.outputs.version }}"
          draft: false
          prerelease: false
  
      - name: upload-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: objectfs-v${{ needs.build.outputs.version }}.tar.gz
          asset_name: objectfs-v${{ needs.build.outputs.version }}.tar.gz
          asset_content_type: application/gzip

  publish-package:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: download-artifact
          uses: actions/download-artifact@v3
          with:
            name: objectfs-tarball

        - name: extract-version
          run: |
            echo "Version: ${{ needs.build.outputs.version }}"